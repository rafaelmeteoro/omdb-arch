# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Output configuration for debugging"
  lane :config do
    puts is_ci
    sh("fastlane --version")
    gradle(task: "--version")
    sh("fastlane lanes")
    gradle(task: "tasks")
    gradle(task: "model")
    gradle(task: "projects")
    gradle(task: "properties")
  end

  desc "Show update dependencies"
  lane :dependency_updates do
    gradle(task: "dependencyUpdates")
  end

  desc "Compile debug and test sources"
  lane :compile do
    gradle(task: "compileDebugSources")
    gradle(task: "compileDebugUnitTestSources")
    gradle(task: "compileDebugAndroidTestSources")
  end

  desc "Execute debug lint"
  lane :lint do
    gradle(
      task: "lint",
      flags: "--no-daemon --stacktrace"
    )
  end

  desc "Execute Ktlint Verification"
  lane :ktlint do
    gradle(
      task: "ktlintCheck",
      flags: "--no-daemon --stacktrace"
    )
  end

  desc "Execute Detekt Verification"
  lane :detekt do
    gradle(
      task: "detekt",
      flags: "--no-daemon --stacktrace"
    )
  end

  desc "Execute Statical Analysis"
  lane :analysis do
    lint
    ktlint
    detekt
  end

  desc "Assemble source and test APKs"
  lane :assemble do
    gradle(
      task: "assemble",
      flags: "--no-daemon --stacktrace"
    )
    gradle(
      task: "assembleAndroidTest",
      flags: "--no-daemon --stacktrace"
    )
  end

  desc "Execute unit test"
  lane :unit_test do
    gradle(
      task: "test",
      flags: "--no-daemon --stacktrace"
    )
  end

  desc "Execute jacoco test report"
  lane :jacoco_test do
    gradle(
      tasks: ["jacocoTestReport", "jacocoTestReportDebug"],
      flags: "--no-daemon"
    )
  end

  desc "Execute instrumentation test on Emulator"
  lane :instrumentation_test do
    automated_test_emulator_run(
      AVD_setup_path: "fastlane/avd_setup.json",
      AVD_recreate_new: false,
      AVD_clean_after: false,
      gradle_task: "connectedDebugAndroidTest")
  end

  desc "Local pipeline execution"
  lane :pipeline do
    gradle(task: "clean")
    compile
    analysis
    assemble
    jacoco_test
    notification(subtitle: "Pipeline finished", message: "Execution successful.")
  end
end
