name: Android CI

# Execute Push Pipeline on push to master
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  pull_request:
    branches:
      - master

jobs:
  ##########################################################
  # Static Analysis Job:
  ##########################################################
  analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2.3.2

      - name: Compute key for CI cache
        run: ./compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.1
        with:
          java-version: 1.8

      - name: Check code formatting
        run: ./gradlew ktlintCheck --stacktrace

      - name: Check code smells
        run: ./gradlew detekt --stacktrace

  ##########################################################
  # Unit Test Job:
  ##########################################################
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2.3.2

      - name: Compute key for CI cache
        run: ./compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.1
        with:
          java-version: 1.8

      - name: Run unit tests and capture code coverage
        run: ./gradlew clean jacocoTestReport jacocoTestReportDebug --stacktrace

      - name: Share test reports with Codecov
        uses: codecov/codecov-action@v1.0.13

  ##########################################################
  # Lint Job:
  # Install dependencies and execute analysis debug
  ##########################################################
  #  analysis:
  #    needs: compile
  #    runs-on: macOS-latest
  #    steps:
  #      - name: Checkout Repo
  #        uses: actions/checkout@v2
  #
  #      - name: Set up Ruby 2.6
  #        uses: actions/setup-ruby@v1
  #        with:
  #          ruby-version: 2.6
  #
  #      - name: Cache Bundle
  #        uses: actions/cache@v2
  #        with:
  #          path: vendor/bundle
  #          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #          restore-keys: |
  #            ${{ runner.os }}-gems-
  #
  #      - name: Install Dependencies
  #        run: |
  #          bundle config path vendor/bundle
  #          bundle install
  #
  #      - name: Run Fastlane Analysis Lane
  #        uses: maierj/fastlane-action@v1.4.0
  #        with:
  #          lane: 'analysis'
  #          bundle-install-path: 'vendor/bundle'

  ##########################################################
  # Unit Test Job:
  # Install dependencies and execute unit tests
  ##########################################################
  #  unit_test:
  #    needs: analysis
  #    runs-on: macOS-latest
  #    steps:
  #      - name: Checkout Repo
  #        uses: actions/checkout@v2
  #
  #      - name: Set up Ruby 2.6
  #        uses: actions/setup-ruby@v1
  #        with:
  #          ruby-version: 2.6
  #
  #      - name: Cache Bundle
  #        uses: actions/cache@v2
  #        with:
  #          path: vendor/bundle
  #          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #          restore-keys: |
  #            ${{ runner.os }}-gems-
  #
  #      - name: Install Dependencies
  #        run: |
  #          bundle config path vendor/bundle
  #          bundle install
  #
  #      - name: Run Fastlane Jacoco Test Lane
  #        uses: maierj/fastlane-action@v1.4.0
  #        with:
  #          lane: 'jacoco_test'
  #          bundle-install-path: 'vendor/bundle'
  #
  #      - name: Share test reports with Codecov
  #        uses: codecov/codecov-action@v1.0.12

  #     Codecov container action is only supported on Linux
  #      - name: Run codacy coverage reports
  #        uses: codacy/codacy-coverage-reporter-action@master
  #        with:
  #          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

#  build:
#    runs-on: macOS-latest
#    steps:
#      - name: Project Checkout
#        uses: actions/checkout@v2.3.2
#
#      - name: Setup JDK 1.8
#        uses: actions/setup-java@v1.4.1
#        with:
#          java-version: 1.8
#
#      - name: Resolve dependencies
#        run: ./gradlew androidDependencies --no-daemon --stacktrace
#
#      - name: Check code formatting
#        run: ./gradlew ktlintCheck --no-daemon --stacktrace
#
#      - name: Check code smells
#        run: ./gradlew detekt --no-daemon --stacktrace
#
#      - name: Run unit tests and capture code coverage
#        run: ./gradlew clean jacocoTestReport jacocoTestReportDebug --no-daemon
#
#      - name: Assemble APK
#        run: ./gradlew assembleDebug -xlint --no-daemon --stacktrace
#
#      - name: Share test reports with Codecov
#        uses: codecov/codecov-action@v1.0.12
